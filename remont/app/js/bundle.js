(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var formFiller = [{
  value: "Тип роботи",
  desc: ""
}, {
  value: "Ім'я",
  desc: ""
}, {
  value: "Телефон",
  desc: ""
}];
console.log(formFiller);

function changeDesc(value, desc) {
  for (var i in formFiller) {
    if (formFiller[i].value == value) {
      formFiller[i].desc = desc;
      break;
    }
  }
}

var typeRadio = document.querySelectorAll('[name="type-radio"]');
typeRadio.forEach(function (e) {
  e.addEventListener("change", function () {
    changeDesc("Тип роботи", e.value);
    console.log(formFiller);
  });
});
var form = document.querySelector(".re-test__form");
form.addEventListener("submit", function (e) {});
var hambButton = document.querySelector(".re-header__hamb");
hambButton.addEventListener("click", function (e) {
  e.preventDefault();
  document.querySelector(".re-header__list").classList.toggle("invisible");
  document.querySelector(".fa-bars").classList.toggle("fa-times");
});

function closeModal() {
  document.querySelector(".re-modal").classList.toggle("so-invisible");
}

var callButton = document.querySelector(".re-header__callButton");
callButton.addEventListener("click", closeModal);
var closeFormButton = document.querySelector(".close-form");
closeFormButton.addEventListener("click", closeModal);
var getFormSubmitButton = document.querySelector(".re-modal__form");
var a = document.querySelectorAll('[name="inputField"]');
getFormSubmitButton.addEventListener("submit", function (e) {
  e.preventDefault();

  for (var i = 0; i < a.length; i++) {
    changeDesc(formFiller[i * 1 + 1].value, a[i].value);
  }

  console.log(formFiller);
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
