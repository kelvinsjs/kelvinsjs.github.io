(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var formFiller = [{
  value: "Ім'я",
  desc: ""
}, {
  value: "Телефон",
  desc: ""
}, {
  value: "Тип об'єкту",
  desc: ""
}, {
  value: "Тип роботи",
  desc: ""
}, {
  value: "Площа",
  desc: ""
}, {
  value: "Чи є матеріал",
  desc: ""
}, {
  value: "Чи є електрика",
  desc: ""
}, {
  value: "Знижка",
  desc: ""
}, {
  value: "Пройшов опитування",
  desc: "Ні"
}];

function changeDesc(value, desc) {
  for (var i in formFiller) {
    if (formFiller[i].value == value) {
      formFiller[i].desc = desc;
      break;
    }
  }
}

var finalText = "";

function finalTextGenerate() {
  finalText = "";

  if (formFiller[formFiller.length * 1 - 1].desc === "Ні") {
    finalText = finalText + "Клієнт замовив зворотний дзвінок. \n";

    for (var i = 0; i < 2; i++) {
      finalText = finalText + formFiller[i].value + ": " + formFiller[i].desc + "\n";
    }

    console.log(finalText);
  } else {
    finalText = finalText + "Клієнт пройшов опитування \n";
    formFiller.forEach(function (e) {
      finalText = finalText + e.value + ": " + e.desc + "\n";
    });
    console.log(finalText);
  }
}

var typeRadio = document.querySelectorAll('[name="type-radio"]');
typeRadio.forEach(function (e) {
  e.addEventListener("change", function () {
    changeDesc("Тип роботи", e.value);
    console.log(formFiller);
  });
});
var form = document.querySelector(".re-test__form");
form.addEventListener("submit", function (e) {});
var hambButton = document.querySelector(".re-header__hamb");
hambButton.addEventListener("click", function (e) {
  e.preventDefault();
  document.querySelector(".re-header__list").classList.toggle("invisible");
  document.querySelector(".fa-bars").classList.toggle("fa-times");
});

function closeModal() {
  document.querySelector(".re-modal").classList.toggle("so-invisible");
}

var callButton = document.querySelector(".re-header__callButton");
callButton.addEventListener("click", function () {
  document.querySelector(".re-modal").classList.toggle("so-invisible");
  document.querySelector(".re-modal__quiz").classList.remove("so-invisible");
  document.querySelector(".re-modal__quiz").classList.add("so-invisible");
  document.querySelector(".re-modal__finalScreen").classList.remove("so-invisible");
});
var closeFormButton = document.querySelector(".close-form");
closeFormButton.addEventListener("click", closeModal);
var getFormSubmitButton = document.querySelector(".re-modal__form");
var a = document.querySelectorAll('[name="inputField"]');
getFormSubmitButton.addEventListener("submit", function (e) {
  e.preventDefault();

  for (var i = 0; i < a.length; i++) {
    changeDesc(formFiller[i].value, a[i].value);
  }

  finalTextGenerate();
});
var controlElementArray = 2;
var getQuiz = document.querySelectorAll(".re-modal__quiz-quiz");
var getPrev = document.querySelector(".prev");
var getNext = document.querySelector(".next");
var endButton = document.querySelector(".end");
var coordinaleQuiz = 0;
getPrev.addEventListener("click", function () {
  if (coordinaleQuiz === 0) {
    console.log("zero element, cant make");
  } else {
    getQuiz[coordinaleQuiz].classList.add("so-invisible");
    coordinaleQuiz = coordinaleQuiz - 1;
    getQuiz[coordinaleQuiz].classList.remove("so-invisible");
    endButton.classList.add("so-invisible");
    getNext.classList.remove("so-invisible");
    controlElementArray = controlElementArray - 1;
  }
});
getNext.addEventListener("click", function () {
  if (coordinaleQuiz >= getQuiz.length - 1) {
    console.log("its over, cant make");
    coordinaleQuiz = getQuiz.length - 1;
  } else {
    getQuiz[coordinaleQuiz].classList.add("so-invisible");
    coordinaleQuiz = coordinaleQuiz + 1;

    if (coordinaleQuiz >= getQuiz.length - 1) {
      getNext.classList.add("so-invisible");
      endButton.classList.remove("so-invisible");
    }

    getQuiz[coordinaleQuiz].classList.remove("so-invisible");
  }
});
document.querySelector(".re-header__cost").addEventListener("click", function () {
  document.querySelector(".re-modal").classList.toggle("so-invisible");
  document.querySelector(".re-modal__quiz").classList.remove("so-invisible");
  document.querySelector(".re-modal__finalScreen").classList.remove("so-invisible");
  document.querySelector(".re-modal__finalScreen").classList.add("so-invisible");
});
endButton.addEventListener("click", function () {
  document.querySelector(".re-modal__quiz").classList.remove("so-invisible");
  document.querySelector(".re-modal__quiz").classList.add("so-invisible");
  document.querySelector(".re-modal__finalScreen").classList.remove("so-invisible");
  changeDesc("Пройшов опитування", "Так");
});
var getFirstQ = document.querySelectorAll('[name="first-q-radio"]');
var getSecondQ = document.querySelectorAll('[name="second-q-radio"]');
var getThirdQ = document.querySelectorAll('[name="areaInput"]');
var getFourQ = document.querySelectorAll('[name="fourth-q-radio"]');
var getFifthQ = document.querySelectorAll('[name="fifth-q-radio"]');
var getSixQ = document.querySelectorAll('[name="six-q-radio"]');
var ElementArray = [getFirstQ, getSecondQ, getThirdQ, getFourQ, getFifthQ, getSixQ];
ElementArray.forEach(function (e) {
  e.forEach(function (el) {
    el.addEventListener("change", function () {
      changeDesc(formFiller[controlElementArray].value, el.value);
      controlElementArray = controlElementArray + 1;
    });
  });
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
